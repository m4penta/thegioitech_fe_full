import { useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { cartAction, selectCart } from '../../redux/cartSlice';
import { getUserDecode } from '../../redux/authSlice';
import { cart } from '../../util/cart';
import { useHistory } from 'react-router-dom';
import swal from 'sweetalert';
import { isEmail } from 'validator';
import axios from 'axios';

export const Info = () => {
  const [name, setName] = useState('');
  const [phone, setPhone] = useState('');
  const [address, setAddress] = useState('');
  const [email, setEmail] = useState('');
  const [node, setNode] = useState('');
  const cartSlice = useSelector(selectCart);
  const user = useSelector(getUserDecode);
  console.log('üöÄ ~ file: info.jsx ~ line 19 ~ Info ~ user', user);
  const dispatch = useDispatch();
  const history = useHistory();

  function submit() {
    var vnf_regex = /((09|03|07|08|05)+([0-9]{8})\b)/g;
    if (
      email.length < 1 &&
      phone.length < 1 &&
      address.length < 1 &&
      node.length < 1
    ) {
      swal('B·∫°n ph·∫£i nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin');
    } else if (!vnf_regex.test(phone)) {
      swal('B·∫°n c·∫ßn ƒëi·ªÅn ƒë√∫ng ƒë·ªãnh d·∫°ng s·ªë ƒëi·ªán tho·∫°i');
    } else if (!isEmail(email)) {
      swal('B·∫°n ph·∫£i nh·∫≠p ƒë√∫ng ƒë·ªãnh d·∫°ng email');
    } else {
      const data = {
        name,
        phone,
        address,
        email,
        node,
        cart: cartSlice,
        priceTotal: cart.totalPrice(cartSlice),
      };
      axios
        .post(
          'https://thegioitechcorsproxy.herokuapp.com/https://thegioitech-be.herokuapp.com/api/order/',
          data
        )
        .then(() => {
          swal('ƒê·∫∑t h√†ng th√†nh c√¥ng');
          dispatch(cartAction.setCart([]));
          return history.push('/');
        });
    }
  }
  return (
    <form>
      <h3>Th√¥ng tin ƒë·∫∑t h√†ng</h3>

      <p className='text-gray'>
        <i>B·∫°n c·∫ßn nh·∫≠p ƒë·∫ßy ƒë·ªß c√°c tr∆∞·ªùng th√¥ng tin c√≥ d·∫•u </i>
      </p>
      <div className='row'>
        <div className='col'>
          <div className='control'>
            <input
              name='Title'
              type='text'
              placeholder='H·ªç v√† t√™n '
              onChange={(event) => setName(event.target.value)}
            />
          </div>
        </div>
      </div>
      <div className='row'>
        <div className='col'>
          <div className='control'>
            <input
              name='Phone'
              type='tel'
              placeholder='S·ªë ƒëi·ªán tho·∫°i '
              onChange={(event) => setPhone(event.target.value)}
            />
          </div>
        </div>
      </div>
      <div className='row shInfo'>
        <div className='col'>
          <div className='control'>
            <input
              name='Address'
              type='text'
              placeholder='ƒê·ªãa ch·ªâ nh·∫≠n h√†ng '
              onChange={(event) => setAddress(event.target.value)}
            />
          </div>
        </div>
      </div>
      <div className='row shInfo'>
        <div className='col'>
          <div className='control'>
            <input
              name='Email'
              type='email'
              placeholder='Email'
              onChange={(event) => setEmail(event.target.value)}
            />
          </div>
        </div>
      </div>
      <div className='row shInfo'>
        <div className='col'>
          <div className='control'>
            <textarea
              name='Note'
              placeholder='Ghi ch√∫'
              onChange={(event) => setNode(event.target.value)}
            />
          </div>
        </div>
      </div>

      <div className='row shInfo'>
        <div className='control-button'>
          <button onClick={() => submit()} type='button'>
            X√ÅC NH·∫¨N V√Ä ƒê·∫∂T H√ÄNG
          </button>
        </div>
      </div>
    </form>
  );
};
